# StateMover Path
StateMover_PATH = $(shell dirname $(shell dirname $(shell which StateMover)))

# CSR_SIM Path
CSR_SIM_PATH = $(StateMover_PATH)/CSR_SIM

# Vivado Installation Path
VIVADO_PATH = /opt/Xilinx/Vivado/2022.2/
VIVADO_PATH = $(shell dirname $(shell dirname $(shell which vivado)))

# Modelsim Flags
VSIM_FLAGS  = -pli $(CSR_SIM_PATH)/csr_sim.sl -t ps -voptargs=+acc +notimingchecks 
VSIM_LFLAGS = -L unisims_ver -L unisim -L unimacro_ver -L secureip -L xpm

# Files
PROJ_NAME 		= 	counter
PROJ_DIR 		= 	./$(PROJ_NAME)
NESTLIST_FILE 	= 	$(PROJ_DIR)/$(PROJ_NAME)_impl_netlist.v
TOP_FILE 		= 	./src/top.v
IL_FILE			= 	./src/interruption_logic.v
TB_FILE 		= 	./src/sys_tb.v
TB_MODULE  		= 	sys_tb
DO_FILE 		= 	./wave.do

all: compile run_gui

run:
	vsim -do "run -all ;quit -force" -c $(TB_MODULE) work.glbl $(VSIM_FLAGS) $(VSIM_LFLAGS)

run_gui:
	vsim -do $(DO_FILE) sys_tb work.glbl $(VSIM_FLAGS) $(VSIM_LFLAGS)


compile: clean
	vlib work

	vlog $(VIVADO_PATH)/data/verilog/src/glbl.v

	# Implementation netlist generated by the scripts under the Vivado Project
	vlog $(NESTLIST_FILE)
	
	# Top Module
	vlog $(IL_FILE)
	vlog $(TOP_FILE)
	vlog $(TB_FILE)

hardware_create_project: 
	vivado -mode tcl -source vivado_create_project.tcl -nolog -nojournal

hardware_implement: 
	vivado -mode tcl -source vivado_implement.tcl -nolog -nojournal

clean:
	rm -rf work .Xil
	rm -f transcript
	rm -f vsim.wlf
